---
title: "Trade Statistics: Import Volumes and Values"
format:
  html:
    toc: true
    toc-title: TOC
    toc-expand: true
    toc_float: true
    toc-depth: 6
    number-sections: true
    theme: lumen
    code-fold: false
lang: en
---

# Data

::: {.callout-note collapse="false" icon="true"}
## 財務省貿易統計 - 普通貿易統計（CSV形式の統計表）

[https://www.customs.go.jp/toukei/info/tsdl.htm](https://www.customs.go.jp/toukei/info/tsdl.htm){target="_blank"}
:::

::: {.callout-note collapse="false" icon="true"}
## 普通貿易統計
貿易統計_全国分 / 統計品別表 / 輸入

[https://www.e-stat.go.jp/stat-search/files?page=1&layout=datalist&toukei=00350300&tstat=000001013141&cycle=1&tclass1=000001013183&tclass2=000001013185&tclass3val=0&metadata=1&data=1](https://www.e-stat.go.jp/stat-search/files?page=1&layout=datalist&toukei=00350300&tstat=000001013141&cycle=1&tclass1=000001013183&tclass2=000001013185&tclass3val=0&metadata=1&data=1){target="_blank"}
:::

```{r}
#| message: false
library(readxl)
library(dplyr)
library(pdftools)
library(stringr)
library(arrow)
library(DT)
library(ggplot2)
library(scales)
library(ggtext)

outdir <- "../data/trade"
figdir <- "../fig"
dir.create(outdir, showWarnings = FALSE, recursive = TRUE)
dir.create(figdir, showWarnings = FALSE)

outdirestat <- "../data/e-stat/貿易統計"
dir.create(outdirestat, showWarnings = FALSE, recursive = TRUE)
```

## 1989--2005

```{r}
#| message: false
#| warning: false
xlsx_url <- "https://www.e-stat.go.jp/stat-search/file-download?statInfId=000006428488&fileKind=0"
xlsx_file <- "k001c-002-053-000-000.xls"
file_path <- file.path(outdirestat, xlsx_file)
  
if (!file.exists(file_path)) {
  download.file(xlsx_url, file_path)
}

df1989_2005 <- read_excel(file_path, skip = 5)
df1989_2005 <- df1989_2005 |>
  filter(!is.na(...1)) |>
  mutate(
    year = case_when(
      grepl("平\\.元", ...1) ~ 1989,
      grepl("平\\.(\\d+)", ...1) ~ 1988 + as.numeric(sub("平\\.(\\d+).*", "\\1", ...1))
    )
  )

df1989_2005 |>
  glimpse()

write.table(df1989_2005, file = file.path(outdir, "import_volumes_and_value_1989-2005.csv"), sep = ",", row.names = FALSE)
```

## 1998--2008

```{r}
#| message: false
#| warning: false
years <- 1998:2008
statInfIds <- c(
  "1998" = "000002269817",
  "1999" = "000002313950",
  "2000" = "000002347202",
  "2001" = "000002413920",
  "2002" = "000002487544",
  "2003" = "000002214385",
  "2004" = "000002263383",
  "2005" = "000002263262",
  "2006" = "000002099370",
  "2007" = "000002133168",
  "2008" = "000002532108"
)
data_list <- list()

for (year in years) {
  pdf_url <- paste0("https://www.e-stat.go.jp/stat-search/file-download?statInfId=", statInfIds[as.character(year)], "&fileKind=2")
  pdf_file <- paste0("d13h", substr(as.character(year), 3, 4), "i002.pdf")
  file_path <- file.path(outdirestat, pdf_file)
  
  if (!file.exists(file_path)) {
    download.file(pdf_url, file_path)
  }
  
  pdf_text <- pdftools::pdf_text(file_path)
  
  df <- pdf_text[3] |>
    str_split("\n") |>
    unlist() |> 
    (\(x) x[str_detect(x, "KG\\s+\\d")])() %>%
    gsub("\\*\\*", "", .) %>%
    gsub("(\\d{4})\\s{2,}(4‑ST)", "\\1_\\2", .) %>%
    paste(collapse = "\n") %>%
    read.table(text = ., header = FALSE, stringsAsFactors = FALSE)
  
  colnames(df) <- c("COMODITY", "UNIT2_month", "QUANTITY2_month", "VALUE_month", "QUANTITY2", "VALUE")
  
  df <- df |>
    mutate(year = year)
  
  data_list[[as.character(year)]] <- df
}

df1998_2008 <- bind_rows(data_list) |>
  filter(COMODITY == "0810.50‑000")

df1998_2008 |>
  glimpse()

write.table(df1998_2008, file = file.path(outdir, "import_volumes_and_value_1998-2008.csv"), sep = ",", row.names = FALSE)
```

## 2009--2024

```{r}
#| message: false
#| warning: false
years <- 2009:2024
data_list <- list()

for (year in years) {
  csv_url <- paste0("https://www.e-stat.go.jp/stat-search/file-download?statInfId=", 
                    switch(as.character(year),
                           "2009" = "000007064293",
                           "2010" = "000008622910",
                           "2011" = "000012679370",
                           "2012" = "000018862159",
                           "2013" = "000023618925",
                           "2014" = "000028156986",
                           "2015" = "000031362184",
                           "2016" = "000031528657",
                           "2017" = "000031670699",
                           "2018" = "000031792535",
                           "2019" = "000031907313",
                           "2020" = "000032046081",
                           "2021" = "000032254759",
                           "2022" = "000040117466",
                           "2023" = "000040223254",
                           "2024" = "000040255838"),
                    "&fileKind=1")
  
  csv_file <- paste0("ik-110h", year, "i001.csv")
  file_path <- file.path(outdirestat, csv_file)
  
  if (!file.exists(file_path)) {
    download.file(csv_url, file_path)
  }
  
  data_list[[as.character(year)]] <- read.csv(file_path)
}

df2009_2024 <- bind_rows(data_list) |>
  filter(HS == "'081050000'")

df2009_2024 |>
  glimpse()

write.table(df2009_2024, file = file.path(outdir, "import_volumes_and_value_2009-.csv"), sep = ",", row.names = FALSE)
```

## Merge

```{r}
#| warning: false
df <- bind_rows(
  df1989_2005 |>
    select(year, quantity2 = `第二数量`, value = `金額（千円）`) |>
    filter(year < 1998),
  df1998_2008 |>
    select(year, quantity2 = QUANTITY2, value = VALUE),
  df2009_2024 |>
    select(year = Year, quantity2 = Quantity2.Year, value = Value.Year)
)

write.table(df, file = file.path(outdir, "import_volumes_and_value_all.csv"), sep = ",", row.names = FALSE)
write_parquet(df, sink = file.path(outdir, "import_volumes_and_value_all.parquet"))
```

## Read the Data

```{r}
#| eval: false
# df <- read.csv(file.path(outdir, "import_volumes_and_value_all.csv"), header = TRUE, check.names = FALSE)
df <- read_parquet(file.path(outdir, "import_volumes_and_value_all.parquet"))
```


# Tables

```{r}
DT::datatable(
  df, rownames = FALSE, filter = 'top',
  extensions = 'Buttons',
  options = list(
    pageLength = 10,
    dom = 'Blfrtip',
    buttons = list(
      c('csv', 'excel'),
      I('colvis')
    )
  )
) |>
  DT::formatCurrency(grepl("quantity2|value", names(df)), currency = "", interval = 3, mark = ",", digits = 0)
```


# Figures

## Import Volume

```{r}
df_clean_quantity <- df |>
  mutate(ton = quantity2 / 1000)

p <- ggplot(df_clean_quantity, aes(x = year, y = ton, fill = "black")) +
  geom_bar(stat = "identity") +
  scale_y_continuous(labels = scales::label_comma()) +
  labs(
    title = "Import Volumes",
    x = "Year",
    y = "Import Volume (t)",
    caption = "**Source:** Ministry of Finance, _Trade Statistics_."
  ) +
  theme(
    legend.position = "none",
    text = element_text(family = "Helvetica"),
    plot.caption = element_markdown()
  )

ggsave("import_volumes_by_year.pdf", plot = p, path = figdir, width = 8, height = 6)
p
```

## Import Value

```{r}
df_clean_value <- df

p <- ggplot(df_clean_value, aes(x = year, y = value, color = "black")) +
  geom_line() +
  geom_point() +
  scale_y_continuous(limits = c(0, NA), labels = scales::label_comma()) +
  labs(
    title = "Import Value",
    x = "Year",
    y = "Import Value (thousand JPY)",
    caption = "**Source:** Ministry of Finance, _Trade Statistics_."
  ) +
  theme(
    legend.position = "none",
    text = element_text(family = "Helvetica"),
    plot.caption = element_markdown()
  )

ggsave("import_value_by_year.pdf", plot = p, path = figdir, width = 8, height = 6)
p
```
